name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: List built files
        run: ls -l target/

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./target

      - name: Check downloaded artifact
        run: ls -l target/

      - name: Determine JAR filename
        id: set_jar
        run: |
          JAR_FILE=$(ls target/*.jar | head -n 1)
          echo "Found JAR: $JAR_FILE"
          echo "::set-output name=jar_path::$JAR_FILE"

      - name: Copy build artifact to EC2
        run: |
          echo "Copying JAR to EC2..."
          scp -i ${{ secrets.EC2_SSH_KEY }} ${{ steps.set_jar.outputs.jar_path }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/app.jar

      - name: SSH into EC2 and restart backend service
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          fail_on_error: false
          script: |
            echo "Stopping old app..."
            pkill -f 'java -jar' || true
            sleep 2

            echo "Starting new app..."
            nohup java -jar /home/ubuntu/app.jar > /home/ubuntu/app.log 2>&1 &
            
            echo "Verifying process..."
            ps -ef | grep app.jar
            echo "Last 20 lines of app.log:"
            tail -n 20 /home/ubuntu/app.log
