name: Java CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Make Maven wrapper executable
        run: chmod +x mvnw

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Move JAR to known filename
        run: |
          mv target/*.jar target/app.jar
          ls -lh target/app.jar

      - name: Compute checksum of JAR
        run: sha256sum target/app.jar > target/jar.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: |
            target/app.jar
            target/jar.sha256

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: ./target

      - name: Verify JAR checksum before transfer
        run: sha256sum -c target/jar.sha256

      - name: Encode JAR to Base64 for safe transfer
        run: base64 target/app.jar > encoded.txt

      - name: Copy encoded JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: encoded.txt
          target: /home/ubuntu/encoded.txt

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Decoding JAR..."
            base64 -d /home/ubuntu/encoded.txt > /home/ubuntu/app.jar
            chmod +x /home/ubuntu/app.jar

            echo "Stopping old app..."
            pkill -f 'java -jar' || true
            sleep 2

            echo "Starting new app..."
            nohup java -jar /home/ubuntu/app.jar > /home/ubuntu/app.log 2>&1 &

            echo "Verifying process..."
            ps -ef | grep app.jar
            echo "Last 20 lines of app.log:"
            tail -n 20 /home/ubuntu/app.log
